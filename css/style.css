html {
  color: #222;
  font-size: 18px;
  line-height: 1.4;
  font-family: "Source Sans 3", serif;
  font-optical-sizing: auto;
  font-style: normal;
  box-sizing: border-box;
}

body {
  padding: 0;
  margin: 0;
}

button {
  cursor: pointer;
}

::-moz-selection {
  background: #b3d4fc;
  text-shadow: none;
}

::selection {
  background: #b3d4fc;
  text-shadow: none;
}

hr {
  display: block;
  height: 1px;
  border: 0;
  border-top: 1px solid #ccc;
  margin: 1em 0;
  padding: 0;
}

audio,
canvas,
iframe,
img,
svg,
video {
  vertical-align: middle;
}

fieldset {
  border: 0;
  margin: 0;
  padding: 0;
}

textarea {
  resize: vertical;
}

h1, .h1, h2, .h2, h3, .h3, h4, .h4, h5, h6 {
  font-family: "Oswald", serif;
  font-optical-sizing: auto;
}

button {
  font-family: inherit;
}

main {
  position: relative;
  height: calc(100vh - 80px);

  @media (max-width: 768px) {
    height: 80vh;
  }
}

.home-title {
  --transform-y: -50%;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, var(--transform-y));
  height: 33vw;
  width: 33vw;
  border-radius: 50%;
  background: black;
  color: white;
  z-index: 10;
  align-content: center;
  text-align: center;
  border: 20px solid white;
  overflow: hidden;
  margin: 0;
  padding: 0;

  @media (max-width: 768px) {
    border-width: 2.5vw;
    height: 50vw;
    width: 50vw;
  }

  img {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: cover;
    filter: saturate(80%) brightness(60%);
  }

  h1 {
    font-size: 3.5vw;
    position: absolute;
    top: 72%;
    padding: 0;
    margin: 0;
    width: 100%;
    text-align: center;

    @media (max-width: 768px) {
      font-size: 6.5vw;
      top: 65%;
    }
  }

  p {
    position: absolute;
    top: calc( 72% + 4.5vw );
    padding: 0;
    margin: 0;
    width: 100%;
    text-align: center;
    letter-spacing: 2px;

    @media (max-width: 768px) {
      letter-spacing: 0;
    }
  }
}

footer {
  background: white;
  position: absolute;
  bottom: 0;
  width: calc( 100% - 48px );
  height: 80px;
  display: grid;
  grid-template-columns: 1fr 1fr 1fr;
  align-items: center;
  gap: 40px;
  padding: 0 24px;

  blockquote {
    text-align: right;
    margin: 0;
    padding: 0;
  }

  nav ul {
    padding: 0;
    margin: 0;
    display: flex;
    justify-content: center;
    gap: 20px;

    li {
      display: inline-block;

      button {
        position: relative;
        background: rgba(0,0,0,0.2);
        color: black;
        font-size: 0.8rem;
        padding: 5px 18px 5px 18px;
        outline: 3px solid transparent;
        outline-offset: 12px;
        border-radius: 24px;
        transition: all 400ms cubic-bezier(.47,1.64,.41,.8);

        &:hover, &:focus {
          background: rgba(0,0,0,0.5);
          outline: 3px solid blue;
          outline-offset: 2px;
        }
      }
    }
  }

  @media (max-width: 768px) {
    grid-template-columns: 1fr;
    gap: 0;
    padding: 0 12px;
    width: calc( 100% - 24px );
    height: 20vh;

    p, blockquote {
      text-align: center !important;
      margin: 0;
      font-size: 0.8rem;


      cite {
        display: block;
      }
    }
  }
}

@property --start-one {
  syntax: '<percentage>';
  inherits: false;
  initial-value: 10%;
}
@property --start-two {
  syntax: '<percentage>';
  inherits: false;
  initial-value: 30%;
}
@property --end-one {
  syntax: '<percentage>';
  inherits: false;
  initial-value: 90%;
}
@property --end-two {
  syntax: '<percentage>';
  inherits: false;
  initial-value: 70%;
}

#button-container {
  display: grid;
  grid-template-columns: 1fr 1fr;
  grid-template-rows: 1fr 1fr;
  position: relative;
  height: 100%;
  z-index: 1;
  gap: 20px;

  @media (max-width: 768px) {
    gap: 2.5vw;
  }

  .mg-button {
    --start-one: 10%;
    --start-two: 30%;
    --end-one: 90%;
    --end-two: 70%;

    border: none;
    position: relative;
    overflow: hidden;
    transition: --start-one 0.5s, --end-one 0.5s, --end-two 0.5s, --start-two 0.5s;

    span {
      color: white;
      font-size: min(4vw, 4vh);
      transition: all 0.5s ease-in-out;
      display: block;

      @media (max-width: 768px) {
        font-size: min(6.5vw, 6.5vh);
      }
    }

    img {
      width: 105%;
      height: 105%;
      object-fit: cover;
      position: absolute;
      top: -5%;
      left: -5%;
      z-index: -1;
      filter: blur(5px) saturate(10%);
      transition: 0.5s;
    }

    &.webdev {
      background: linear-gradient(315deg, rgba(140,117,48,1) var(--start-one), rgba(45,51,89,0.7) var(--start-two), rgba(27,31,38,0.7) 50%, rgba(40,44,64,0.7) var(--end-two), rgba(56,115,47,1) var(--end-one));
    }

    &.audio {
      background: linear-gradient(45deg, rgba(6,115,2,1) var(--start-one), rgba(2,40,115,0.7) var(--start-two), rgba(11,12,13,0.7) 50%, rgba(115,55,2,0.7) var(--end-two), rgba(5,89,2,1) var(--end-one));
    }

    &.ai {
      background: linear-gradient(225deg, rgba(138,176,191,1) var(--start-one), rgba(1,38,28,0.7) var(--start-two), rgba(0,13,9,0.7) 50%, rgba(1,58,64,0.7) var(--end-two), rgba(242,242,242,1) var(--end-one));
    }

    &.advocacy {
      background: linear-gradient(135deg, rgba(217,211,199,1) var(--start-one), rgba(140,122,32,0.7) var(--start-two), rgba(30,38,37,0.7) 50%, rgba(89,86,34,0.7) var(--end-two), rgba(242,242,242,1) var(--end-one));
    }

    &:hover, &:focus {
      --start-one: 0%;
      --start-two: 10%;
      --end-one: 100%;
      --end-two: 90%;

      img {
        filter: blur(0px) saturate(60%) brightness(50%);
      }

      span {
        scale: 1.1;
      }
    }
  }
}

/* Open state of the dialog  */
dialog:open {
  opacity: 1;
  transform: scaleY(1);
}

/* Closed state of the dialog   */
dialog {
  opacity: 0;
  transform: scaleY(0);
  border: none;
  height: 60vh;
  width: 100%;
  backdrop-filter: blur(4px);
  background-color: rgba(255,255,255,0.75);
  transition:
    opacity 0.7s ease-out,
    transform 0.7s ease-out,
    overlay 0.7s ease-out allow-discrete,
    display 0.7s ease-out allow-discrete;
  /* Equivalent to
  transition: all 0.7s allow-discrete; */
}

/* Before open state  */
/* Needs to be after the previous dialog:open rule to take effect,
    as the specificity is the same */
@starting-style {
  dialog:open {
    opacity: 0;
    transform: scaleY(0);
  }
}

/* Transition the :backdrop when the dialog modal is promoted to the top layer */
dialog::backdrop {
  background-color: rgb(0 0 0 / 0%);
  transition:
    display 0.7s allow-discrete,
    overlay 0.7s allow-discrete,
    background-color 0.7s;
  /* Equivalent to
  transition: all 0.7s allow-discrete; */
}

dialog:open::backdrop {
  background-color: rgba(0, 0, 0, 0.8);
}

/* This starting-style rule cannot be nested inside the above selector
because the nesting selector cannot represent pseudo-elements. */

@starting-style {
  dialog:open::backdrop {
    background-color: rgba(0, 0, 0, 0.1);
  }
}

.dialog-inner {
  position: relative;
  width: 100%;

  .dialog-content {
    margin-right: max(20px, calc((100vw - 1280px) * 0.5));
    margin-left: max(20px, calc((100vw - 1280px) * 0.5));
    padding: 60px 0;

    h2 {
      font-size: 2.5rem;
      margin: 0;
      padding: 0;
      text-align: center;
    }
  }

  #dialog-close {
    width: 44px;
    height: 44px;
    position: absolute;
    top: 0;
    right: 0;
    background: none;
    border: none;

    svg {
      width: 100%;
      height: 100%;
      color: rgba(0, 0, 0, 0.6);
      transition: color 0.3s ease;
    }

    &:hover svg {
      color: rgba(0, 0, 0, 1);
    }
  }
}

/* ==========================================================================
   Helper classes
   ========================================================================== */

/*
 * Hide visually and from screen readers
 */

.hidden,
[hidden] {
  display: none !important;
}

/*
 * Hide only visually, but have it available for screen readers:
 * https://snook.ca/archives/html_and_css/hiding-content-for-accessibility
 *
 * 1. For long content, line feeds are not interpreted as spaces and small width
 *    causes content to wrap 1 word per line:
 *    https://medium.com/@jessebeach/beware-smushed-off-screen-accessible-text-5952a4c2cbfe
 */

.sr-only {
  border: 0;
  clip: rect(0, 0, 0, 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  white-space: nowrap;
  width: 1px;

  &.focusable:active,
  &.focusable:focus {
    clip: auto;
    height: auto;
    margin: 0;
    overflow: visible;
    position: static;
    white-space: inherit;
    width: auto;
  }
}

@media only screen and (min-width: 35em) {
  /* Style adjustments for viewports that meet the condition */
}

@media print,
  (-webkit-min-device-pixel-ratio: 1.25),
  (min-resolution: 1.25dppx),
  (min-resolution: 120dpi) {
  /* Style adjustments for high resolution devices */
}

@media print {
  *,
  *::before,
  *::after {
    background: #fff !important;
    color: #000 !important;
    /* Black prints faster */
    box-shadow: none !important;
    text-shadow: none !important;
  }

  a,
  a:visited {
    text-decoration: underline;
  }

  a[href]::after {
    content: " (" attr(href) ")";
  }

  abbr[title]::after {
    content: " (" attr(title) ")";
  }

  a[href^="#"]::after,
  a[href^="javascript:"]::after {
    content: "";
  }

  pre {
    white-space: pre-wrap !important;
  }

  pre,
  blockquote {
    border: 1px solid #999;
    page-break-inside: avoid;
  }

  tr,
  img {
    page-break-inside: avoid;
  }

  p,
  h2,
  h3 {
    orphans: 3;
    widows: 3;
  }

  h2,
  h3 {
    page-break-after: avoid;
  }
}

